name: poc-cqrs-pgl

networks:
  pgl-cqrs-net:

services:
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    networks:
      - pgl-cqrs-net
  
  write-db:
    image: postgres:latest
    hostname: write-db
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: ${PG_USER:-admin}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-12345}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${PG_DATABASE:-testdb}",
          "-U",
          "${PG_USER:-admin}"
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5433:5433"
    networks:
      - pgl-cqrs-net
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./master_pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./master_postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c config_file=/etc/postgresql/postgresql.conf

  read-db:
    image: postgres:latest
    hostname: read-db
    environment:
      PGUSER: replicator
      PGPASSWORD: replicator_password
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${PG_DATABASE:-testdb}",
          "-U",
          "${PG_USER:-admin}"
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - write-db
    ports:
      - "5432:5432"
    networks:
      - pgl-cqrs-net
    # volumes:
    #   - ./slave_pg_hba.conf:/etc/postgresql/pg_hba.conf
    #   - ./slave_postgresql.conf:/etc/postgresql.conf
    # command: |
    #   bash -c "
    #   until pg_isready -U replicator -h write-db -p 5433
    #   do
    #   echo 'Waiting for primary to be to connect...'
    #   sleep 2s
    #   done
    #   echo 'Backup done, starting replica...'
    #   pg_basebackup -h write-db -U replicator -D /var/lib/postgresql/data -R --slot=replication_slot --port=5433
    #   "

  writer:
    build: 
      context: ./writer
      dockerfile: ./dockerfile
    ports:
      - "8081:8080"
    networks:
      - pgl-cqrs-net
    depends_on:
      - write-db
  
  reader:
    build:
      context: ./reader
      dockerfile: ./dockerfile
    ports:
      - "8082:8080"
    networks:
      - pgl-cqrs-net
    depends_on:
      - read-db