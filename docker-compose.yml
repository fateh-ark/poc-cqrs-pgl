name: poc-cqrs-pgl

networks:
  pgl-cqrs-net:

# volumes:
#   keycloak_db_data:

services:
  rabbitmq:
    image: rabbitmq:4.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - pgl-cqrs-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_SCHEMA: keycloak
      KC_DB_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
      KC_DB_USERNAME: ${DB_USERNAME}
      KC_DB_PASSWORD: ${DB_PASSWORD}
    command: start-dev --hostname-strict=false --hostname-url=http://keycloak:8080
    ports:
      - "8080:8080"
    networks:
      - pgl-cqrs-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/master"]
      interval: 5s
      timeout: 10s
      retries: 5

  # keycloak-db:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: ${KC_DB_USERNAME}
  #     POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - keycloak_db_data:/var/lib/postgresql/data
  #   networks:
  #     - pgl-cqrs-net
  
  writer:
    build: ./writer
    networks:
      - pgl-cqrs-net
    environment:
      KEYCLOAK_PUBLIC_KEY: ${KEYCLOAK_PUBLIC_KEY}
      DB_URL: ${DB_URL}
    depends_on:
      rabbitmq:
         condition: service_healthy

  reader:
    build: ./reader
    networks:
      - pgl-cqrs-net
    environment:
      DB_URL: ${DB_URL}
    depends_on:
      rabbitmq:
         condition: service_healthy

  log-consumer:
    build: ./log-consumer
    networks:
      - pgl-cqrs-net
    depends_on:
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80"
    depends_on:
      - writer
      - reader
    networks:
      - pgl-cqrs-net

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
    environment:
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak:8080/realms/pcg
      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID}
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}
      OAUTH2_PROXY_EMAIL_DOMAINS: ${OAUTH2_PROXY_EMAIL_DOMAINS}
      OAUTH2_PROXY_UPSTREAMS: ${OAUTH2_PROXY_UPSTREAMS}
      OAUTH2_PROXY_HTTP_ADDRESS: ${OAUTH2_PROXY_HTTP_ADDRESS}
      OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: ${OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS}
      OAUTH2_PROXY_EXTRA_JWT_ISSUERS: |
        http://keycloak:8080/realms/poc-cqrs=${KEYCLOAK_PUBLIC_KEY}
    volumes:
      - ./oauth2-templates:/etc/oauth2-proxy/templates
    command:
      - --custom-templates-dir=/etc/oauth2-proxy/templates
    ports:
      - "4180:4180"
    depends_on:
      keycloak:
        condition: service_healthy
      nginx:
        condition: service_started
    networks:
      - pgl-cqrs-net
